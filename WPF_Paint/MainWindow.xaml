<Window x:Class="WPF_Paint.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:WPF_Paint" xmlns:local1="clr-namespace:WPF_Paint.Models"
        mc:Ignorable="d"
        Title="Paint Premium" Height="450" Width="800" Background="LightSlateGray">
    <Window.Resources>
        <local1:RGBToSolidColorBrushConverter x:Key="RGBToBrushConverter"/>
        <Style x:Key="ColorButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="LightBlue"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <i:Interaction.Behaviors>
        <!-- Zachowania klawiatury -->
        <local1:KeyboardBehaviour
                    KeyDownCommand="{Binding DataContext.KeyDownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    KeyUpCommand="{Binding DataContext.KeyUpCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
    </i:Interaction.Behaviors>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="90"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Canvas on the right -->
        <ScrollViewer x:Name="MainScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Column="1">
            <Canvas x:Name="MainCanvas" Margin="-200" DataContext="{Binding MainCanvas, Mode=TwoWay}"   ClipToBounds="True"
                    Width="{Binding DataContext.CanvasWidth, RelativeSource={RelativeSource AncestorType=Window}}" 
                    Height="{Binding DataContext.CanvasHeight, RelativeSource={RelativeSource AncestorType=Window}}">
                <Canvas.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding DataContext.ZoomLevel, RelativeSource={RelativeSource AncestorType=Window}}" 
                            ScaleY="{Binding DataContext.ZoomLevel, RelativeSource={RelativeSource AncestorType=Window}}"/>
                </Canvas.LayoutTransform>
                <i:Interaction.Behaviors>
                    <!-- Zachowania myszy -->
                    <local1:MouseBehaviour 
                    MouseDownCommand="{Binding DataContext.MouseLeftDownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    MouseUpCommand="{Binding DataContext.MouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    MouseMoveCommand="{Binding DataContext.MouseMoveCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                </i:Interaction.Behaviors>
            </Canvas>
        </ScrollViewer>
        <!-- Toolbar on the left -->
        <ToolBarTray Grid.Column="0">
            <ToolBar Margin="5,0,5,0">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type ToolBar}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToolBar}">
                                    <Border>
                                        <DockPanel>
                                            <WrapPanel Orientation="Horizontal" DockPanel.Dock="Top" IsItemsHost="True"/>
                                            <!-- Do not include the part that creates the overflow button -->
                                        </DockPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToolBar.Resources>
                <StackPanel>
                    <Menu Margin="0,5,0,0" Width="70" BorderThickness="1" BorderBrush="Black">
                        <MenuItem Width="70">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Kształty" />
                                    <TextBlock Text="▼" Margin="5,0,0,0" />
                                </StackPanel>
                            </MenuItem.Header>
                            <MenuItem Header="Prostokąt" Command="{Binding RectangleCommand}" />
                            <MenuItem Header="Trójkąt" Command="{Binding TriangleCommand}" />
                            <MenuItem Header="Elipsa" Command="{Binding EllipseCommand}" />
                            <MenuItem Header="Linia" Command="{Binding LineCommand}" />
                        </MenuItem>
                    </Menu>
                    <Button Margin="0,5,0,0" Command="{Binding DrawCommand}">Rysowanie</Button>
                    <Button Margin="0,5,0,0" Command="{Binding TextCommand}">Tekst</Button>

                    <Menu Margin="0,5,0,0" Width="70" BorderThickness="1" BorderBrush="Black">
                        <MenuItem Width="70">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Wilokąt" />
                                    <TextBlock Text=" ▼" Margin="5,0,0,0" />
                                </StackPanel>
                            </MenuItem.Header>
                            <MenuItem Header="Rysuj" Command="{Binding PolygonToolCommand}" />
                            <MenuItem Header="Presunięcie" Command="{Binding VectorCommand}" CommandParameter="{Binding ElementName=MainCanvas}"  />
                            <MenuItem Header="Obrót" Command="{Binding RotateCommand}" CommandParameter="{Binding ElementName=MainCanvas}"  />
                            <MenuItem Header="Skalowanie" Command="{Binding ScaleCommand}" CommandParameter="{Binding ElementName=MainCanvas}"  />
                            <MenuItem Header="Wybierz punkt" Command="{Binding ChoosePointCommand}" CommandParameter="{Binding ElementName=MainCanvas}"  />
                        </MenuItem>
                    </Menu>

                    <Grid Margin="0,20,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button  Grid.Column="0" Background="{Binding BorderColorProperty, Converter={StaticResource RGBToBrushConverter}}" Style="{StaticResource ColorButtonStyle}" Command="{Binding OpenBorderColorSelectorCommand}" />

                        <Button  Grid.Column="1" Background="{Binding FillColorProperty, Converter={StaticResource RGBToBrushConverter}}" Style="{StaticResource ColorButtonStyle}"  Command="{Binding OpenFillingColorSelectorCommand}" />
                    </Grid>

                    <Menu Margin="0,20,0,0" Width="70" BorderThickness="1" BorderBrush="Black">
                        <MenuItem Width="70">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Kolory" />
                                    <TextBlock Text=" ▼" Margin="5,0,0,0" />
                                </StackPanel>
                            </MenuItem.Header>
                            <MenuItem Header="Histogram" Command="{Binding HistogramWindowCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Wyrównywanie" Command="{Binding HistEqualizationCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                        </MenuItem>
                    </Menu>

                    <Menu Margin="0,5,0,0" Width="70" BorderThickness="1" BorderBrush="Black">
                        <MenuItem Width="70">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Filtry" />
                                    <TextBlock Text=" ▼" Margin="5,0,0,0" />
                                </StackPanel>
                            </MenuItem.Header>
                            <MenuItem Header="Punktowy">
                                <MenuItem Header="Dodawanie" Command="{Binding AddFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Odejmowanie" Command="{Binding SubtractFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Mnożenie" Command="{Binding MultiplyFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Dzielenie" Command="{Binding DivideFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Zmiana jaskości" Command="{Binding BrightnessFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Skala szarości" Command="{Binding GrayscaleFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            </MenuItem>
                            <MenuItem Header="Binaryzacji">
                                <MenuItem Header="Ręczny" Command="{Binding BinarizationUserCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Procentowy" Command="{Binding BinarizationPercentCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Selekcja iteratywna średniej" Command="{Binding BinarizationMedianCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Otsu" Command="{Binding BinarizationOtsuCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Niblack" Command="{Binding BinarizationNiblackCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Bernsen" Command="{Binding BinarizationBernsensCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            </MenuItem>
                            <MenuItem Header="Morfologiczne">
                                <MenuItem Header="Dylatacja" Command="{Binding MorphologyDilatationCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Erozja" Command="{Binding MorphologyErosionCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Otwarcie" Command="{Binding MorphologyOpeningCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Domknięcie" Command="{Binding MorphologyClosingCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Pocienianie" Command="{Binding MorphologyThiningCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                                <MenuItem Header="Pogrubianie" Command="{Binding MorphologyThickeningCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            </MenuItem>
                            <MenuItem Header="Uśredniający" Command="{Binding ApplyAverageFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Medianowy" Command="{Binding ApplyMedianFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Sobela" Command="{Binding ApplySobelEdgeDetectionCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Wyostrzający" Command="{Binding ApplyHighPassFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Gaussa" Command="{Binding ApplyGaussianBlurFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Własny" Command="{Binding ApplyCustomFilterCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                        </MenuItem>
                    </Menu>
                    <Button Margin="0,5,0,0" Command="{Binding ImageCommand}" CommandParameter="{Binding ElementName=MainCanvas}" Content="Obraz"/>



                    <Menu Margin="0,5,0,0" Width="70" BorderThickness="1" BorderBrush="Black">
                        <MenuItem Width="70">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Pliki" />
                                    <TextBlock Text=" ▼" Margin="5,0,0,0" />
                                </StackPanel>
                            </MenuItem.Header>
                            <MenuItem Header="Nowy" Command="{Binding NewCanvasCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Otwórz" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                            <MenuItem Header="Zapisz" Command="{Binding SaveCommand}" CommandParameter="{Binding ElementName=MainCanvas}" />
                        </MenuItem>
                    </Menu>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>
    </Grid>

</Window>
